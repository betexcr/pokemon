{
  "rules": {
    ".read": false,
    ".write": false,

    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid"
      }
    },

    "battles": {
      "$bid": {
        "meta": {
          ".read": "auth != null",
          ".write": false
        },
        "public": {
          ".read": "auth != null",
          ".write": false
        },
        "private": {
          "$uid": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": false
          }
        },
        "turns": {
          "$turn": {
            "choices": {
              "$uid": {
                ".read": "auth != null && auth.uid == $uid",
                ".write": "
                  auth != null &&
                  auth.uid == $uid &&
                  root.child('battles/'+$bid+'/meta/phase').val() == 'choosing' &&
                  !data.exists() &&
                  newData.hasChildren(['action','payload','clientVersion','committedAt']) &&
                  (newData.child('action').val() == 'move' || newData.child('action').val() == 'switch' || newData.child('action').val() == 'forfeit') &&
                  (newData.child('action').val() == 'move' ? newData.child('payload').hasChildren(['moveId','target']) : true) &&
                  (newData.child('action').val() == 'switch' ? newData.child('payload').hasChildren(['switchToIndex']) : true) &&
                  newData.child('clientVersion').val() == root.child('battles/'+$bid+'/meta/version').val()
                "
              }
            },
            "resolution": {
              ".read": "auth != null",
              ".write": false
            },
            "replacements": {
              "$uid": {
                ".read": "auth != null && auth.uid == $uid",
                ".write": "
                  auth != null &&
                  auth.uid == $uid &&
                  root.child('battles/'+$bid+'/meta/phase').val() == 'replacing' &&
                  !data.exists() &&
                  newData.hasChildren(['switchToIndex','committedAt'])
                "
              }
            }
          }
        }
      }
    }
  }
}